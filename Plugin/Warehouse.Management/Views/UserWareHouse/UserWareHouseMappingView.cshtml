@using CloudVOffice.Core.Domain.Common;
@{
    Layout = "_MainAppLayout";
}
@addTagHelper *, Syncfusion.EJ2
<style>
    .badge-primary {
        background-color: #da1113;
    }
</style>
<style>


    .highlighted-row {
        background-color: #90EE90; /* Set your desired highlight color */
    }
</style>
<header class="main-heading">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
                <div class="page-icon">
                    <i class="icon-laptop_windows"></i>
                </div>
                <div class="page-title">
                    <h5>Ware House</h5>
                    <h6 class="sub-heading">Welcome to WareHouse Admin</h6>
                </div>
            </div>
            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
                <div class="right-actions">
                    <span class="last-login"></span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="main-content">
    <div class="row gutters">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-10">
                            UserLocation Mapping View
                        </div>
                        <div class="col-md-2 ">
                            <a href="/WareHouse/UserWareHouseMapping/UserWareHouseMappingCreate" class="btn btn-primary btn-sm float-right"><i class="icon icon-add"></i>Add UserWareHouseMapping</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <ejs-grid id="GridOverview" dataSource="ViewBag.UserWareHousemappinglist"
                              allowFiltering="true" allowSorting="true"
                              allowExcelExport="true" allowGrouping="true"
                              allowMultiSorting="true"
                              allowPdfExport="true"
                              height="600" rowHeight="38"
                              enableHover="false" enableHeaderFocus="true"
                              enableVirtualization="true" allowSelection="true"
                              toolbarClick="toolbarClick" toolbar="@(new List<string>() {"ExcelExport", "PdfExport", "CsvExport" ,"Search"})">

                        <e-grid-filtersettings type="Excel"></e-grid-filtersettings>

                        <e-grid-selectionsettings persistSelection="true" type="Multiple" checkboxOnly="true"></e-grid-selectionsettings>
                        <e-grid-columns>
                            <e-grid-column field="WareHuose.WareHouseName" headerText="WareHouse" textAlign="Left" width="200"></e-grid-column>
                            <e-grid-column field="User.FullName" headerText="User" textAlign="Left" width="200"></e-grid-column>

                            <e-grid-column headerText="Action" template="#Actions" width="120"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>

                </div>
            </div>
        </div>
    </div>

</div>
<script>
    $(document).ready(function () {
        $('#GridOverview').on('click', '.e-row', function () {
            $('.highlighted-row').removeClass('highlighted-row');
            $(this).addClass('highlighted-row');
        });
    });
</script>
@{

    if (TempData["msg"] != null)
    {
        <script type="text/javascript">
            const message = "@TempData["msg"]";
            if (message == "@((int)MessageEnum.Success)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: "UserWarteHouseMapping",
                    text: "Successfully created.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.Updated)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: "UserWarteHouseMapping",
                    text: "Successfully updated.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.Deleted)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: "UserWarteHouseMapping",
                    text: "Successfully Deleted.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.UnExpectedError)") {
                sweetAlert({
                    html: true,
                    icon: "danger",
                    title: "UserWarteHouseMapping",
                    text: "There is somthing going wrong.",
                    type: "danger"
                });
            }
            else if (message == "@((int)MessageEnum.Error)") {
                sweetAlert({
                    html: true,
                    icon: "error",
                    title: "UserWarteHouseMapping",
                    text: "There is somthing going wrong.",
                    type: "error"
                });
            }
            else {
                sweetAlert({
                    html: true,
                    icon: "question",
                    title: "UserWarteHouseMapping",
                    text: message,
                    type: "error"
                });
            }
        </script>
    }
}
<script type="text/javascript">
    function Delete(Id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this data!",
            icon: "warning",
            buttons: [
                'No, cancel it!',
                'Yes, I am sure!'
            ],
            confirmButtonColor: "#DD6B55",
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location.href = "/WareHouse/UserWareHouseMapping/DeleteUserWareHouseMapping?UserWareHouseMappingId=" + Id;
            }
        })
    }
</script>
<script id="Actions" type="text/x-template">
    <div class="link">
        <a href="/WareHouse/UserWareHouseMapping/UserWareHouseMappingCreate?UserWareHouseMappingId=${UserWareHouseMappingId}"><i class="icon-pencil3" style="font-size:22px"></i></a> &nbsp;&nbsp;&nbsp;
        <button onClick="Delete(${UserWareHouseMappingId})" style="background: transparent;border: none;"><i class="icon-trash" style="font-size:22px"></i></button>

    </div>
</script>

<script>
    function toolbarClick(args) {
        var gridObj = document.getElementById("GridOverview").ej2_instances[0];
        if (args.item.id === 'GridOverview_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'GridOverview_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'GridOverview_csvexport') {
            gridObj.csvExport();
        }
    }

</script>