
@*@model CloudVOffice.Data.DTO.WareHouses.Items.ItemDTO;*@
@model CloudVOffice.Data.DTO.WareHouses.ViewModel.ViewForItem ;




@if (Model != null && Model.CreatedItemDTO.ItemId.HasValue)
{
	<!-- Display the ItemId if available -->
	<p>ItemId: @Model.CreatedItemDTO.ItemId</p>
}

@using System.Collections;
@using Newtonsoft.Json;
@{
	Layout = "_MainAppLayout";
	ViewData["Title"] = "Item";
}
@addTagHelper *, Syncfusion.EJ2
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<style>

</style>
<header class="main-heading">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
				<div class="page-icon">
					<i class="icon-laptop_windows"></i>
				</div>
				<div class="page-title">
					<h5>Ware House</h5>
					<h6 class="sub-heading">  </h6>
				</div>
			</div>
			<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
				<div class="right-actions">
					<span class="last-login">  </span>
				</div>
			</div>
		</div>
	</div>
</header>


<div class="main-content">
	<div class="row gutters">
		<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">

			<div class="card">

				<div class="card-header">

					<div class="row">
						<div class="col-md-8">
							Item
						</div>
						<div class="col-md-4 text-right float-right">
							<a href="/WareHouse/Item/ItemView" class="btn btn-success btn-sm float-right"><i class="icon-list2"></i> List </a>

						</div>
					</div>
				</div>

				<form asp-route="WareHouse/Item/ItemCreate" method="post" autocomplete="off" enctype="multipart/form-data" onsubmit="prepareFormData(event)">
					<div asp-action-summary="ModelOnly" class="message-error"></div>


					@*<div class="card-header"><b>Pin Code</b></div>*@
					<div class="card-body">

						<div class="form-row">
							<div class="form-group col-md-3">
								<input asp-for="@Model.CreatedItemDTO.ItemId" type="hidden" />
							</div>
						</div>


						<div class="form-row">
							@*<div class="form-group col-md-3">

								<label for="ItemName" class="form-label">Item Name&nbsp;<span style="color:red;"><b>*</b></span></label>
								<input asp-for="@Model.ItemName" type="text" class="form-control" autofocus="autofocus" placeholder="Item Name" />
								<span asp-validation-for="ItemName"></span>
								<div asp-validation-summary="ModelOnly" class="message-error"></div>
							</div>*@

							@*<div class="form-group col-md-4">
								<label for="SectorId" class="form-label">Sector &nbsp</label>
								<ejs-dropdownlist id="SectorId" allowFiltering="true" change="onChangeSector" dataSource="@(new SelectList((IEnumerable)ViewBag.Sectors, "SectorId", "SectorName").Items)" placeholder="Select Sector" popupHeight="220px" name="SectorId" value="@Model.SectorId" autofocus="autofocus">
									<e-dropdownlist-fields text="SectorName" value="SectorId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="SectorId"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="SectorId" class="form-label">Sector &nbsp</label>
								<ejs-dropdownlist id="SectorId" name="CreatedItemDTO.SectorId" allowFiltering="true" change="onChangeSector"
												  dataSource="@(new SelectList(Model.Sectors, "SectorId", "SectorName").Items)"
												  placeholder="Select Sector" popupHeight="220px" 
												  value="@Model.CreatedItemDTO.SectorId" autofocus="autofocus">
									<e-dropdownlist-fields text="SectorName" value="SectorId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CreatedItemDTO.SectorId"></span>
							</div>



							@*<div class="form-group col-md-3">

								<label for="CompanyName" class="form-label">Company Name &nbsp;</label>
								<input asp-for="@Model.CompanyName" type="text" class="form-control" autofocus="autofocus" placeholder="Company Name" />
								<span asp-validation-for="CompanyName"></span>
							</div>*@

							@*<div class="form-group col-md-3">
								<label for="CategoryId" class="form-label">Category &nbsp;</label>
								<ejs-dropdownlist id="CategoryId" allowFiltering="true" dataSource="@(new SelectList((IEnumerable)ViewBag.Categories, "CategoryId", "CategoryName").Items)" placeholder="Select Category" popupHeight="220px" value="@Model.CategoryId">
									<e-dropdownlist-fields text="CategoryName" value="CategoryId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CategoryId"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="CategoryId" class="form-label">Category Name</label>
								<ejs-dropdownlist id="CategoryId" allowFiltering="true" ejs-for="@Model.CreatedItemDTO.CategoryId" change="onChangeCategory" placeholder="Select Category" popupHeight="220px">
									<e-dropdownlist-fields text="categoryName" value="categoryId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CreatedItemDTO.CategoryId"></span>
							</div>


							@*<div class="form-group col-md-3">

								<label for="BrandName" class="form-label">Brand Name &nbsp;</label>
								<input asp-for="@Model.BrandName" type="text" class="form-control" autofocus="autofocus" placeholder="Brand Name" />
								<span asp-validation-for="BrandName"></span>
							</div>*@


							@*<div class="form-group col-md-3">
								<label for="SubCategory1Id" class="form-label">Sub Category &nbsp;</label>
								<ejs-dropdownlist id="SubCategory1Id" allowFiltering="true" dataSource="@(new SelectList((IEnumerable)ViewBag.SubCategories1, "SubCategory1Id", "SubCategory1Name").Items)" placeholder="Select SubCategory1" popupHeight="220px" value="@Model.SubCategory1Id">
									<e-dropdownlist-fields text="SubCategory1Name" value="SubCategory1Id"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="SubCategory1Id"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="SubCategory1Id" class="form-label">SubCategory Name</label>
								<ejs-dropdownlist id="SubCategory1Id" allowFiltering="true" ejs-for="@Model.CreatedItemDTO.SubCategory1Id" placeholder="Select SubCategory" popupHeight="220px">
									<e-dropdownlist-fields text="subCategory1Name" value="subCategory1Id"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CreatedItemDTO.SubCategory1Id"></span>
							</div>

						</div>
						

						<div class="form-row">
							<div class="form-group col-md-4">

								<label for="ItemName" class="form-label">Item Name&nbsp;<span style="color:red;"><b>*</b></span></label>
								<input asp-for="@Model.CreatedItemDTO.ItemName" type="text" class="form-control" autofocus="autofocus" placeholder="Item Name" />
								<span asp-validation-for="CreatedItemDTO.ItemName"></span>
								<div asp-validation-summary="ModelOnly" class="message-error"></div>
							</div>

							<div class="form-group col-md-4">

								<label for="CompanyName" class="form-label">Company Name &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.CompanyName" type="text" class="form-control" autofocus="autofocus" placeholder="Company Name" />
								<span asp-validation-for="CreatedItemDTO.CompanyName"></span>
							</div>


							<div class="form-group col-md-4">

								<label for="BrandName" class="form-label">Brand Name &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.BrandName" type="text" class="form-control" autofocus="autofocus" placeholder="Brand Name" />
								<span asp-validation-for="CreatedItemDTO.BrandName"></span>
							</div>

						</div>

						<div class="form-row">
							@*<div class="form-group col-md-4">

								<label for="UnitOfMeasurement" class="form-label">Unit Of Measurement&nbsp;</label>
								<input asp-for="@Model.UnitOfMeasurement" type="text" class="form-control" autofocus="autofocus" placeholder="Unit Of Measurement" />
								<span asp-validation-for="UnitOfMeasurement"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="ProductWeight" class="form-label">Product Weight&nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.ProductWeight" type="text" class="form-control" autofocus="autofocus" placeholder="ProductWeight" oninput="calculateCaseWeight()" id="ProductWeight" />
								<span asp-validation-for="CreatedItemDTO.ProductWeight"></span>
							</div>

							@*<div class="form-group col-md-4">

								<label for="CaseWeight" class="form-label">Case Weight &nbsp;</label>
								<input asp-for="@Model.CaseWeight" type="text" class="form-control" autofocus="autofocus" placeholder="Case Weight" readonly/>
								<span asp-validation-for="CaseWeight"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="UnitPerCase" class="form-label">Unit Per Case&nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.UnitPerCase" type="number" class="form-control" autofocus="autofocus" placeholder="Unit Per Case" oninput="calculateCaseWeight()" id="UnitPerCase" />
								<span asp-validation-for="CreatedItemDTO.UnitPerCase"></span>
							</div>

							<div class="form-group col-md-4">
								<label for="CaseWeight" class="form-label">Case Weight &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.CaseWeight" type="text" class="form-control" autofocus="autofocus" placeholder="Case Weight" id="CaseWeight" readonly />
								<span asp-validation-for="CreatedItemDTO.CaseWeight"></span>
							</div>

							@*<div class="form-group col-md-4">

								<label for="UnitPerCase" class="form-label">Unit Per Case&nbsp;</label>
								<input asp-for="@Model.UnitPerCase" type="number" class="form-control" autofocus="autofocus" placeholder="Unit PerCase" />
								<span asp-validation-for="UnitPerCase"></span>
							</div>*@

							

						</div>

						<div class="form-row">
							<div class="form-group col-md-4">

								<label for="ManufactureDate" class="form-label">Manufacture Date&nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.ManufactureDate" type="date" class="form-control" autofocus="autofocus" placeholder="Manufacture Date" />
								<span asp-validation-for="CreatedItemDTO.ManufactureDate"></span>
							</div>

							<div class="form-group col-md-4">

								<label for="ExpiryDate" class="form-label">Expiry Date&nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.ExpiryDate" type="date" class="form-control" autofocus="autofocus" placeholder="Expiry Date" />
								<span asp-validation-for="CreatedItemDTO.ExpiryDate"></span>
							</div>

							@*<div class="form-group col-md-3">

								<label for="Barcode" class="form-label">Barcode &nbsp;</label>
								<input asp-for="@Model.Barcode" type="text" class="form-control" autofocus="autofocus" placeholder="Barcode" />
								<span asp-validation-for="Barcode"></span>
							</div>*@

							@*<div class="form-group col-md-3">

								<label for="HandlingType" class="form-label">Handling Type &nbsp;</label>
								<input asp-for="@Model.HandlingType" type="text" class="form-control" autofocus="autofocus" placeholder="Handling Type" />
								<span asp-validation-for="HandlingType"></span>
							</div>*@

							@*<div class="form-group col-md-4">
								<label for="HandlingType" class="form-label">Handling Type</label>
								<ejs-dropdownlist id="WareHouseName" allowFiltering="true" dataSource="@(new SelectList((IEnumerable)ViewBag.HandlingTypes, "HandlingTypeId", "HandlingTypeName").Items)" placeholder="Handling Type " popupHeight="220px" name="HandlingType" value="@Model.HandlingType">
									<e-dropdownlist-fields text="HandlingTypeName" value="HandlingTypeId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="HandlingType"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="HandlingType" class="form-label">Handling Type</label>
								<ejs-dropdownlist id="HandlingType" allowFiltering="true" name="CreatedItemDTO.HandlingType"
												  dataSource="@(new SelectList(Model.HandlingTypes, "HandlingTypeId", "HandlingTypeName").Items)"
												  placeholder="Handling Type " popupHeight="220px"
												  value="@Model.CreatedItemDTO.HandlingType">
									<e-dropdownlist-fields text="HandlingTypeName" value="HandlingTypeId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CreatedItemDTO.HandlingType"></span>
							</div>
							

						</div>


						<div class="form-row">

							<div class="form-group col-md-4">

								<label for="MRP" class="form-label">MRP &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.MRP" type="number" class="form-control" autofocus="autofocus" placeholder="MRP" />
								<span asp-validation-for="CreatedItemDTO.MRP"></span>
							</div>

							<div class="form-group col-md-4">

								<label for="PurchaseCost" class="form-label">Purchase Cost &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.PurchaseCost" type="number" class="form-control" autofocus="autofocus" placeholder="Purchase Cost" />
								<span asp-validation-for="CreatedItemDTO.PurchaseCost"></span>
							</div>

							<div class="form-group col-md-4">

								<label for="SalesCost" class="form-label">Sales Cost &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.SalesCost" type="number" class="form-control" autofocus="autofocus" placeholder="Sales Cost" />
								<span asp-validation-for="CreatedItemDTO.SalesCost"></span>
							</div>

						</div>

						<div class="form-row">

							@*<div class="form-group col-md-3">

								<label for="CGST" class="form-label">CGST &nbsp;</label>
								<input asp-for="@Model.CGST" type="number" class="form-control" autofocus="autofocus" placeholder="CGST" />
								<span asp-validation-for="CGST"></span>
							</div>*@

							@*<div class="form-group col-md-4">
								<label for="CGST" class="form-label">CGST</label>
								<ejs-dropdownlist id="GSTValue" allowFiltering="true" dataSource="@(new SelectList((IEnumerable)ViewBag.Gst, "GSTId", "GSTValue").Items)" placeholder="Select CGST" popupHeight="220px" name="CGST" value="@Model.CGST">
									<e-dropdownlist-fields text="GSTValue" value="GSTId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CGST"></span>
							</div>*@

							<div class="form-group col-md-4">
								<label for="CGST" class="form-label">CGST</label>
								<ejs-dropdownlist id="GSTValue" allowFiltering="true" name="CreatedItemDTO.CGST"
												  dataSource="@(new SelectList(Model.GST, "GSTId", "GSTValue").Items)"
												  placeholder="Select CGST" popupHeight="220px" name="CGST"
												  value="@Model.CreatedItemDTO.CGST">
									<e-dropdownlist-fields text="GSTValue" value="GSTId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CreatedItemDTO.CGST"></span>
							</div>


							<div class="form-group col-md-4">

								<label for="SGST" class="form-label">SGST &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.SGST" type="number" class="form-control" autofocus="autofocus" placeholder="SGST" />
								<span asp-validation-for="CreatedItemDTO.SGST"></span>
							</div>

							<div class="form-group col-md-4">

								<label for="HSN" class="form-label">HSN &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.HSN" type="text" class="form-control" autofocus="autofocus" placeholder="HSN" />
								<span asp-validation-for="CreatedItemDTO.HSN"></span>
							</div>

							

						</div>



						<div class="form-row">

							@*<div class="form-group col-md-3">
								<label for="Images" class="form-label">Images</label>
								<input asp-for="@Model.ImagesUp" type="file" id="ImagesUp" class="form-control" autofocus="autofocus" placeholder="Upload Image" />
								<span asp-validation-for="Images"></span>
								@{
									if (Model.Images != null)
									{
										<img src="/uploads/setup/@Model.Images" style="height:100px; width:100px" />
										<input type="hidden" asp-for="@Model.Images">
									}
								}
							</div>*@

							<div class="form-group col-md-4">
								<label for="Thumbnail" class="form-label">Thumbnail</label>
								<input asp-for="@Model.CreatedItemDTO.ThumbnailUp" type="file" id="ThumbnailUp" class="form-control" autofocus="autofocus" placeholder="Upload Image" />
								<span asp-validation-for="CreatedItemDTO.Thumbnail"></span>
								@{
									if (Model.CreatedItemDTO.Thumbnail != null)
									{
										<img src="/uploads/setup/@Model.CreatedItemDTO.Thumbnail" style="height:100px; width:100px" />
										<input type="hidden" asp-for="@Model.CreatedItemDTO.Thumbnail" value="@Model.CreatedItemDTO.Thumbnail">
									}
								}
							</div>


							<div class="form-group col-md-4">
								<label for="Images" class="form-label">Images</label>
								<input asp-for="@Model.CreatedItemDTO.ImagesUp" type="file" id="ImagesUp" class="form-control" multiple />
								<span asp-validation-for="CreatedItemDTO.Images"></span>

								@if (Model.CreatedItemDTO.Images != null && Model.CreatedItemDTO.Images.Count > 0)
								{
									for (int i = 0; i < Model.CreatedItemDTO.Images.Count; i++)
									{
										<img src="/uploads/setup/@Model.CreatedItemDTO.Images[i]" style="height:100px; width:100px" />
										<input type="hidden" name="CreatedItemDTO.Images" value="@Model.CreatedItemDTO.Images[i]" />
									}
								}
							</div>


							<div class="form-group col-md-4">
								<label for="Barcode" class="form-label">Barcode &nbsp;</label>
								<input asp-for="@Model.CreatedItemDTO.Barcode" type="text" class="form-control" autofocus="autofocus" placeholder="Barcode" readonly />
								<span asp-validation-for="CreatedItemDTO.Barcode"></span>

								@if (!string.IsNullOrEmpty(Model.CreatedItemDTO.Barcode))
								{
									<!-- Display the barcode image -->
									<img src="data:image/png;base64,@(Model.CreatedItemDTO.Barcode)" alt="Barcode Image" />
								}
							</div>


						</div>

						<div class="form-row">
							<div class="form-group col-md-3">

								<label for="BarCodeNotAvailable" class="form-label">Generate Barcode</label>
								<br>
								<input asp-for="@Model.CreatedItemDTO.BarCodeNotAvailable" type="checkbox" id="BarCodeNotAvailable" />
								<span asp-validation-for="CreatedItemDTO.BarCodeNotAvailable"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="IsActive" class="form-label">Is Active</label>
								<br>
								<input asp-for="@Model.CreatedItemDTO.IsActive" type="checkbox" />
								<span asp-validation-for="CreatedItemDTO.IsActive"></span>
							</div>

						</div>


						<br /><br />

						<div class="form-row">
							<div class="form-group col-md-3">
								<button id="saveButton" type="submit" name="btnSave" value="btnSave" class="btn btn-primary">Save</button>
							</div>

							<div class="form-group col-md-3">
								@if (Model != null && Model.CreatedItemDTO.ItemId.HasValue)
								{
									<!-- Display the ItemId if available -->
									<p>ItemId: @Model.CreatedItemDTO.ItemId</p>

									<!-- Set the value of the button to ItemId if available -->
									<button id="generateBarcodeButton" type="submit" class="btn btn-secondary" value="@Model.CreatedItemDTO.ItemId" name="btnGenerateBarcode" style="margin-top: 5px;">Generate BarCode</button>
								}
								else
								{
									<!-- Default value for the button if ItemId is not available -->
									<button id="generateBarcodeButton" type="submit" class="btn btn-secondary" value="btnGenerateBarcode" name="btnGenerateBarcode" style="margin-top: 5px;">Generate BarCode</button>
								}
							</div>

							


						</div>
					</div>

					@*<div class="card-body">

						<div class="col-lg-2 col-md-2 col-sm-12">
							
							<button id="saveButton" type="submit" name="btnSave" value="btnSave" class="btn btn-primary">Save</button>


							@if (Model != null && Model.ItemId.HasValue)
							{
								<!-- Display the ItemId if available -->
								<p>ItemId: @Model.ItemId</p>

								<!-- Set the value of the button to ItemId if available -->
								<button id="generateBarcodeButton" type="submit" class="btn btn-secondary" value="@Model.ItemId" name="btnGenerateBarcode">Generate BarCode</button>
							}
							else
							{
								<!-- Default value for the button if ItemId is not available -->
								<button id="generateBarcodeButton" type="submit" class="btn btn-secondary" value="btnGenerateBarcode" name="btnGenerateBarcode">Generate BarCode</button>
							}
						</div>


					</div>*@

					@*<div class="card-body">
						<div class="col-lg-2 col-md-2 col-sm-12">
							<button id="saveButton" type="submit" class="btn btn-primary">Save</button>
							
						</div>
					</div>*@

				</form>

			</div>



		</div>
	</div>

</div>


@{

    if (TempData["msg"] != null)
    {
        <script type="text/javascript">


			var message = "@TempData["msg"]";
			if (message == "Kindly Save the data first") {
				sweetAlert({
					html: true,
					icon: "danger",
					title: "Process Error",
					text: "Kindly Save the data first.",
					type: "danger"
				});
			}

		</script>
	}
}

<script>
	function onChangeSector(args) {
		$.ajax({
			type: "GET",
			url: "/WareHouse/Category/GetCategoryBySectorId",
			data: { sectorId: args.value },
			contentType: "application/json",
			dataType: "json",
			success: function (result) {
				console.log(result);
				var categoryDropDown = document.getElementById("CategoryId").ej2_instances[0];
				categoryDropDown.dataSource = result;
				categoryDropDown.dataBind();

				categoryDropDown.value = null;
			},
			error: function () {

			}
		});
	}
</script>

<script>
	function onChangeCategory(args) {
		$.ajax({
			type: "GET",
			url: "/WareHouse/SubCategory1/GetSubCategoryByCategoeyId",
			data: { categoryId: args.value },
			contentType: "application/json",
			dataType: "json",
			success: function (result) {
				console.log(result);
				var subcategoryDropDown = document.getElementById("SubCategory1Id").ej2_instances[0];
				subcategoryDropDown.dataSource = result;
				subcategoryDropDown.dataBind();

				subcategoryDropDown.value = null;
			},
			error: function () {

			}
		});
	}
</script>

<script>
	function calculateCaseWeight() {
		var unitOfMeasurementValue = parseFloat(document.getElementById('ProductWeight').value) || 0;
		var unitPerCaseValue = parseFloat(document.getElementById('UnitPerCase').value) || 0;
		var caseWeight = unitOfMeasurementValue * unitPerCaseValue;

		document.getElementById('CaseWeight').value = caseWeight.toFixed(2); // Adjust the number of decimal places as needed
	}
</script>


@section scripts{
	@*<script>
		function readURL(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();
				reader.onload = function (e) {
					$('#imagePreview').css('background-image', 'url(' + e.target.result + ')');
					$('#imagePreview').hide();
					$('#imagePreview').fadeIn(650);
				}
				reader.readAsDataURL(input.files[0]);
			}
		}
		$("#ImagesUp").change(function () {
			readURL(this);
		
			});
		});
	</script>*@

	<script>
		function readThumbnailURL(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();
				reader.onload = function (e) {
					$('#thumbnailPreview').attr('src', e.target.result);
				}
				reader.readAsDataURL(input.files[0]);
			}
		}

		function readImagesURL(input) {
			if (input.files && input.files.length > 0) {
				for (var i = 0; i < input.files.length; i++) {
					var reader = new FileReader();
					reader.onload = function (e) {
						// Create an img element for each image and append it to a container
						var img = $('<img>').attr('src', e.target.result).css({ 'height': '100px', 'width': '100px' });
						$('#imagesPreview').append(img);
					}
					reader.readAsDataURL(input.files[i]);
				}
			}
		}

		$("#ThumbnailUp").change(function () {
			readThumbnailURL(this);
		});

		$("#ImagesUp").change(function () {
			readImagesURL(this);
		});


		$(document).ready(function () {
			// Function to update the button text and visibility based on the checkbox state
			function updateButtonsVisibility() {
				var checkBox = $('#BarCodeNotAvailable');
				var saveButton = $('#saveButton');
				var generateBarcodeButton = $('#generateBarcodeButton');

				if (checkBox.prop('checked')) {
					saveButton.text('Save');
					generateBarcodeButton.show();
				} else {
					saveButton.text('Save');
					generateBarcodeButton.hide();
				}
			}

			// Attach change event handler to the checkbox
			$('#BarCodeNotAvailable').change(function () {
				updateButtonsVisibility();
			});

			// Initial call to set the initial button text and visibility
			updateButtonsVisibility();
		});

	</script>


}