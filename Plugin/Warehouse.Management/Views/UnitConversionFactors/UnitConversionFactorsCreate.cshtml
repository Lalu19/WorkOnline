@model CloudVOffice.Data.DTO.WareHouses.UOMs.UnitConversionFactorsDTO;
@using System.Collections;
@using Newtonsoft.Json;
@{
	Layout = "_MainAppLayout";
	ViewData["Title"] = "Unit Conversion Factors";
}
@addTagHelper *, Syncfusion.EJ2
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<header class="main-heading">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
				<div class="page-icon">
					<i class="icon-laptop_windows"></i>
				</div>
				<div class="page-title">
					<h5>Unit Conversion Factors</h5>
					<h6 class="sub-heading">  </h6>
				</div>
			</div>
			<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
				<div class="right-actions">
					<span class="last-login">  </span>
				</div>
			</div>
		</div>
	</div>
</header>
<div class="main-content">
	<div class="row gutters">
		<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
			<div class="card">
				<form asp-route="WareHouse/UnitConversionFactors/UnitConversionFactorsCreate" method="post" autocomplete="off">
					<div asp-validation-summary="ModelOnly" class="message-error"></div>
					<div class="card-header"><b>Unit Conversion Factors Create</b></div>
					<div class="card-body">
						<div class="form-row">
							<div class="form-group col-md-3">
								<input asp-for="@Model.UnitConversionFactorsId" type="hidden" />
								<span asp-validation-for="UnitConversionFactorsId"></span>
							</div>
						</div>
						<div class="form-row">
							<div class="form-group col-md-3">
								<label for="FromUnitId" class="form-label">From Unit</label>
								<ejs-dropdownlist id="FromUnitId" allowFiltering="true" ejs-for="@Model.FromUnitId" filtering="onFromUnitfiltering" dataSource="@(new SelectList((IEnumerable)ViewBag.unit, "UnitId", "UnitName").Items)" placeholder="Select From Unit" popupHeight="220px">
									<e-dropdownlist-fields text="UnitName" value="UnitId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="FromUnitId"></span>
							</div>
							<div class="form-group col-md-3">
								<label for="ToUnitId" class="form-label">To Unit</label>
								<ejs-dropdownlist id="ToUnitId" allowFiltering="true" ejs-for="@Model.ToUnitId" filtering="onToUnitfiltering" dataSource="@(new SelectList((IEnumerable)ViewBag.unit, "UnitId", "UnitName").Items)" placeholder="Select To Unit" popupHeight="220px">
									<e-dropdownlist-fields text="UnitName" value="UnitId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="ToUnitId"></span>
							</div>
							<div class="form-group col-md-3">

								<label for="Value" class="form-label">Value</label>
								<input asp-for="@Model.Value" type="text" class="form-control" autofocus="autofocus" value="0.00" />
								<span asp-validation-for="Value"></span>
							</div>
						</div>
					</div>
					<div class="card-body">
						<div class="col-lg-2 col-md-2 col-sm-12">
							<button type="submit" class="btn btn-primary">Save</button>
						</div>
					</div>

				</form>
			</div>
		</div>
	</div>
</div>
<script>
	function onFromUnitfiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('UnitName', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.unit)), query);
	}
	function onToUnitfiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('UnitName', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.unit)), query);
	}
</script>