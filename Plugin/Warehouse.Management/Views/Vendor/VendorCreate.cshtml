@model CloudVOffice.Data.DTO.WareHouses.Vendors.VendorDTO;
@using System.Collections;
@using Newtonsoft.Json;
@{
	Layout = "_MainAppLayout";
	ViewData["Title"] = "Vendor";
}
@addTagHelper *, Syncfusion.EJ2
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<header class="main-heading">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
				<div class="page-icon">
					<i class="icon-laptop_windows"></i>
				</div>
				<div class="page-title">
					<h5>Ware House</h5>
					<h6 class="sub-heading">  </h6>
				</div>
			</div>
			<div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
				<div class="right-actions">
					<span class="last-login">  </span>
				</div>
			</div>
		</div>
	</div>
</header>


<div class="main-content">
	<div class="row gutters">
		<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">

			<div class="card">
				<form asp-route="/WareHouse/Vendor/VendorCreate" method="post" autocomplete="off" enctype="multipart/form-data" onsubmit="prepareFormData(event)">

					<div class="card-header">
						<div class="row">
							<div class="col-md-8">
								Vendor
							</div>
							<div class="col-md-4 text-right float-right">
								<a href="/WareHouse/Vendor/VendorView" class="btn btn-success btn-sm float-right"><i class="icon-list2"></i> List </a>
							</div>
						</div>
					</div>

					<div class="card-body">

						<div class="form-row">
							<input asp-for="@Model.VendorId" type="hidden" />

							<div class="form-group col-md-3">

								<label for="SectorId" class="form-label">Sector</label>

								<label for="SectorId" class="form-label">Sector Name</label>
								<ejs-dropdownlist id="SectorId" allowFiltering="true" ejs-for="@Model.SectorId" filtering="onSectorNamefiltering" change="onChangeSector" dataSource="@(new SelectList((IEnumerable)ViewBag.SectorList, "SectorId", "SectorName").Items)" placeholder="Select Sector" popupHeight="220px">
									<e-dropdownlist-fields text="SectorName" value="SectorId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="SectorId"></span>
							</div>


							<div class="form-group col-md-3">
								<label for="CategoryId" class="form-label">Category Name&nbsp;</label>

								@*<ejs-dropdownlist id="CategoryId" allowFiltering="true" ejs-for="@Model.CategoryId" filtering="onCategoryNamefiltering" dataSource="@(new SelectList((IEnumerable)ViewBag.CategoryList, "CategoryId", "CategoryName").Items)" placeholder="Select Category" popupHeight="220px">
									<e-dropdownlist-fields text="CategoryName" value="CategoryId"></e-dropdownlist-fields>
								</ejs-dropdownlist>*@
								<ejs-dropdownlist id="CategoryId" allowFiltering="true" ejs-for="@Model.CategoryId" placeholder="Select Category" popupHeight="220px">
									<e-dropdownlist-fields text="categoryName" value="categoryId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="CategoryId"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="WareHuoseId" class="form-label">WareHouse Name&nbsp;</label>

								<ejs-dropdownlist id="WareHuoseId" allowFiltering="true" ejs-for="@Model.WareHuoseId" filtering="onWareHouseNamefiltering" dataSource="@(new SelectList((IEnumerable)ViewBag.WareHouseList, "WareHuoseId", "WareHouseName").Items)" placeholder="Select WareHouse" popupHeight="220px">
									<e-dropdownlist-fields text="WareHouseName" value="WareHuoseId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="WareHuoseId"></span>
							</div>

							<div class="form-group col-md-3">
								<label for="VendorName" class="form-label">Vendor Name&nbsp;<span style="color:red;"><b>*</b></span></label>
								<input asp-for="@Model.VendorName" type="text" class="form-control" autofocus="autofocus" placeholder="Vendor Name" />
								<span asp-validation-for="VendorName"></span>
							</div>

						</div>

						<div class="form-row">
							<div class="form-group col-md-3">

								<label for="CompanyName" class="form-label">Company Name&nbsp;</label>
								<input asp-for="@Model.CompanyName" type="text" class="form-control" autofocus="autofocus" placeholder="Company Name" />
								<span asp-validation-for="CompanyName"></span>
							</div>
							<div class="form-group col-md-3">

								<label for="Address" class="form-label">Address&nbsp;</label>
								<input asp-for="@Model.Address" type="text" class="form-control" autofocus="autofocus" placeholder="Address" />
								<span asp-validation-for="Address"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="Telephone" class="form-label">Telephone&nbsp;</label>
								<input asp-for="@Model.Telephone" type="text" class="form-control" autofocus="autofocus" placeholder="Telephone" />
								<span asp-validation-for="Telephone"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="Mobile1" class="form-label">Mobile Number&nbsp;</label>
								<input asp-for="@Model.Mobile1" type="text" class="form-control" autofocus="autofocus" placeholder="Mobile Number" />
								<span asp-validation-for="Mobile1"></span>
							</div>

						</div>


						<div class="form-row">

							<div class="form-group col-md-3">

								<label for="Mobile2" class="form-label">Alternate Mobile Number&nbsp;</label>
								<input asp-for="@Model.Mobile2" type="text" class="form-control" autofocus="autofocus" placeholder="Alternate Mobile Number" />
								<span asp-validation-for="Mobile2"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="MailId" class="form-label">Mail Id&nbsp;</label>
								<input asp-for="@Model.MailId" type="text" class="form-control" autofocus="autofocus" placeholder="Mail Id" />
								<span asp-validation-for="MailId"></span>
							</div>

							<div class="form-group col-md-3">

								<label for="PoCName" class="form-label">PoC Name&nbsp;</label>
								<input asp-for="@Model.PoCName" type="text" class="form-control" autofocus="autofocus" placeholder="PoC Name" />
								<span asp-validation-for="PoCName"></span>
							</div>
							<div class="form-group col-md-3">

								<label for="GSTNumber" class="form-label">GST Number&nbsp;</label>
								<input asp-for="@Model.GSTNumber" type="text" class="form-control" autofocus="autofocus" placeholder="GST Number" />
								<span asp-validation-for="GSTNumber"></span>
							</div>
						@*	<div class="form-group col-md-3">

								<label for="GSTId" class="form-label">GST&nbsp;</label>
								<ejs-dropdownlist id="GSTId" allowFiltering="true" ejs-for="@Model.GSTId" filtering="onGSTValuefiltering" dataSource="@(new SelectList((IEnumerable)ViewBag.GSTList, "GSTId", "GSTValue").Items)" placeholder="Select GSTValue" popupHeight="220px">
									<e-dropdownlist-fields text="GSTValue" value="GSTId"></e-dropdownlist-fields>
								</ejs-dropdownlist>
								<span asp-validation-for="GSTId"></span>
							</div>*@

							<div class="form-group col-md-3">

								<label for="IsActive" class="form-label">Is Active</label>
								<br>
								<input asp-for="@Model.IsActive" type="checkbox" />
								<span asp-validation-for="IsActive"></span>
							</div>

						</div>
					</div>

					<div class="card-body">

						<div class="col-lg-2 col-md-2 col-sm-12">
							<button type="submit" class="btn btn-primary">Save</button>
						</div>
					</div>

				</form>

			</div>


		</div>
	</div>

</div>


<script>
	function onChangeSector(args) {
		$.ajax({
			type: "GET",
			url: "/WareHouse/Category/GetCategoryBySectorId",
			data: { sectorId: args.value },
			contentType: "application/json",
			dataType: "json",
			success: function (result) {
				console.log(result);
				var categoryDropDown = document.getElementById("CategoryId").ej2_instances[0];
				categoryDropDown.dataSource = result;
				categoryDropDown.dataBind();

				categoryDropDown.value = null;
			},
			error: function () {

			}
		});
	}
</script>




<script>
	function onWareHouseNamefiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('WareHouseName', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.WareHouseList)), query);
	}
</script>
<script>
	function onSectorNamefiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('SectorName', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.SectorList)), query);
	}
</script>
<script>
	function onCategoryNamefiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('CategoryName', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.CategoryList)), query);
	}
</script>
@*<script>
	function onGSTValuefiltering(e) {
		var query = new ej.data.Query();
		query = (e.text !== '') ? query.where('GSTValue', 'startswith', e.text, true) : query;
		e.updateData(@Html.Raw(JsonConvert.SerializeObject(ViewBag.GSTList)), query);
	}
</script>*@
<script>
	function onChangeSector(args) {
		$.ajax({
			type: "GET",
			url: "/WareHouse/Category/GetCategoryBySectorId",
			data: { sectorId: args.value },
			contentType: "application/json",

			dataType: "json",
			success: function (result) {
				console.log(result);
				var sectorDropDown = document.getElementById("CategoryId").ej2_instances[0];
				sectorDropDown.dataSource = result;
				sectorDropDown.dataBind();

			},
			error: function () {

			}
		});
	}
</script>