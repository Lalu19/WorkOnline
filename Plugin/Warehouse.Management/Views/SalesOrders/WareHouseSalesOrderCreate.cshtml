@using System.Collections;
@using Newtonsoft.Json;
@{
    Layout = "_MainAppLayout";
    ViewData["Title"] = "WareHouseSalesOrder";
    var data = new string[] { "Contains", "StartsWith", "EndsWith" };

}
<style>
    .has-icon {
        flex: 0 0 25px;
    }

    .box {
        width: 100%;
        height: auto;
        text-align: center;
        display: inline-block;
        vertical-align: top;
        border-radius: 6px;
        height: 170px;
    }

    .item-name {
        font-size: 15px;
        color: #ffffff;
        display: block;
        font-weight: 700;
    }

    .price {
        font-size: 15px;
        color: #ffffff;
        display: block;
        font-weight: 700;
        padding: 0 0 10px 0;
    }

    img.itemimagess {
        width: 100%;
        height: 100px;
        padding: 5px 5px 5px 5px;
    }

    .col-xl-2.col-lg-2.col-md-2.col-sm-2.itembox {
        padding: 0px 5px 5px 5px;
    }

    .image {
        height: 100px;
    }
</style>
<style>


    .qty-container {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 18px;
    }

        .qty-container .input-qty {
            text-align: center;
            padding: 6px 0px;
            border: 1px solid #d4d4d4;
            max-width: 40px;
        }

        .qty-container .qty-btn-minus,
        .qty-container .qty-btn-plus {
            border: 1px solid #d4d4d4;
            padding: 10px 10px;
            font-size: 10px;
            height: 32px;
            width: 100%;
            transition: 0.3s;
        }

        .qty-container .qty-btn-plus {
            margin-left: -1px;
        }

        .qty-container .qty-btn-minus {
            margin-right: -1px;
        }

    .btn-cornered,
    .input-cornered {
        border-radius: 4px;
    }

    .btn-rounded {
        border-radius: 50%;
    }

    .input-rounded {
        border-radius: 50px;
    }

    p.card-text {
        font-weight: 600;
        font-size: 13px;
        margin-left: -7px;
        /* color:white; */
    }

    .row.itemlist {
        padding: 6px;
    }

    .row.itemlists {
        margin-right: 0px;
        margin-left: 0px;
        margin-bottom: 5px;
    }

    .card-body.checkoutitembody {
        padding: 8px 15px 8px 7px;
    }

    .card-header.itemorderheder {
        text-align: center;
        font-weight: 600;
    }

    .card-body.checkoutitembody {
        height: 350px;
    }

    li.categorymenu {
        border: 3px solid #56c16f;
        margin: 2px 0 2px 0px;
        font-weight: 600;
        border-radius: 5px;
        padding: 10px 0px 10px 5px;
    }

    .card .card-header {
        background: #ffffff;
        border-bottom: 2px solid #56c16d;
    }

    .card .card-footer {
        background: #ffffff;
        border-top: 2px solid #56c16d;
    }

    .card .card-header {
        background: #ffffff;
        border-bottom: 2px solid #56c16d;
        font-weight: 600;
        text-align: center;
    }

    .app-container {
        position: relative;
        background: #e8f6eb;
        top: 60px;
        padding-bottom: 20px;
    }

    .app-wrap {
        min-height: 100vh;
        position: relative;
        background-color: #e8f6eb;
    }

    .card-body.menubody {
        padding: 0px 4px 0px 4px;
    }

    .card.cart {
        position: fixed;
    }

    .main-heading {
        padding: 10px 0 0 0;
    }
</style>
<style>
    form {
        max-width: 80%;
        margin: 0 auto;
        position: relative;
    }

    .input-group {
        position: relative;
    }

    label {
        position: absolute;
        right: 2%;
        top: 50%;
        transform: translatey(-50%);
        color: rgba(0, 0, 0, 0.08);
        transition: all 0.2s ease;
    }

    input.searchinput {
        width: 100%;
        padding: 8px 30px 8px 22px;
        border: 1px solid rgb(0 0 0 / 35%);
        outline: none;
        font-size: 16px;
        box-shadow: 0px 2px 5px rgb(0 0 0 / 27%);
        color: #56c16d;
        font-weight: bold;
        letter-spacing: 1px;
        border-radius: 24px;
        transition: all 0.2s ease;
        text-transform: uppercase;
        margin: 5px 0 5px 0;
    }

    ::-webkit-input-placeholder { /* WebKit browsers */
        text-transform: none;
    }

    input:focus {
        border-color: #56c16d;
    }

        input:focus + label {
            transform: scale(1.05) translatey(-50%);
            color: #56c16d;
        }

    .checkoutitembody {
        max-height: 300px;
        overflow-y: auto;
    }
</style>
<style>
    .action-buttons button {
        margin-right: 5px;
        padding: 5px 10px;
        font-size: 10px;
    }

    .card {
        max-height: 400px;
        overflow-y: auto;
        position: relative;
    }

    .card-footer {
        padding: 10px;
        background-color: #f9f9f9;
        margin-left: 12px;
    }

</style>
<header class="main-heading">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2">
                <div class="page-icon">
                    <a href="/WareHouse/WareHouseDashboard/Dashboard"><i class="icon-home4"></i></a>
                </div>

            </div>
            <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
                <form>
                    <div class="input-group">
                        <input type="text" id="search" class="searchinput" placeholder="Search item's..." autocomplete="off">
                        <label for="search"><i class="icon-search"></i></label>
                    </div>

                    <div class="suggestion-list">
                    </div>
                </form>
            </div>
            <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2">
                <div class="right-actions">
                    <span class="last-login"></span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="row gutters">
    <div class="col-xl-2 col-lg-2 col-md-2 col-sm-2">
        <br>
        <div class="card ">
            <div class="card-header itemorderheder">
                Order
            </div>

            <div class="card-body">
                <nav class="side-nav">
                    <ul class="unifyMenu" id="unifyMenu">
                        @foreach (var PO in ViewBag.DpoList)
                        {
                            <li class="categorymenu" id="menuItem_@PO.DPOUniqueNo" onclick="POIdOnClick('@PO.DPOId', '@PO.DPOUniqueNo', '@PO.WareHuoseId')">
                                <a class="has-arrow" style="cursor:pointer">
                                    <span class="nav-title">@PO.DPOUniqueNo</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
        <div>
            <div class="card-footer">
                <p>Total Orders: <span id="totalPOCount">0</span></p>

                @{
                    int totalQuantitySum = 0;
                    foreach (var PO in ViewBag.DpoList)
                    {
                        totalQuantitySum += PO.TotalQuantity;
                    }
                }
                <p>Order Value: <span id="totalQuantity">@totalQuantitySum</span></p>

            </div>
        </div>
    </div>
    <div class="col-xl-7 col-lg-7 col-md-7 col-sm-7">
        <br />
        <div class="card">
            <div class="card-header" id="categoryname"> Items</div>
            <div class="card-body" id="itemboxesbody">
                <div class="row " id="itemboxes">
                    <div id="orderInfo">
                    </div>
                    <div id="itemsTable">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3">
        <br />
        <div class="card">
            <div class="card-header">Billing Section</div>
            <div class="card-body" id="acceptedItemContainer">
            </div>
        </div>
        <div class="card-footer">
            <button onclick="printInvoice()">Print Invoice</button>
        </div>
    </div>


</div>
<script>
    


    document.addEventListener("DOMContentLoaded", function () {
        var totalPOCount = @ViewBag.DpoList.Count;
        document.getElementById("totalPOCount").innerText = totalPOCount;

        // Initialize total amount for each order
        var totalOrderAmounts = {};
    @foreach (var PO in ViewBag.DpoList)
    {
        <text>totalOrderAmounts[@PO.DPOUniqueNo] = 0; </text>
    }

            // Display total amount for each order
            Object.keys(totalOrderAmounts).forEach(function (key) {
                var totalAmountSpan = document.createElement("span");
                totalAmountSpan.id = "totalOrderAmount_" + key;
                totalAmountSpan.innerText = "0.00";
                document.querySelector("#totalAmount").parentNode.appendChild(document.createElement("br"));
                document.querySelector("#totalAmount").parentNode.appendChild(totalAmountSpan);
            });
    });
</script>
<script>
    var save = null;

    var originalItemsTableHtml2 = '';
    var acceptButtonData = '';
    var globalId;
    var WHouseID;


    //function POId(Id, POPUniqueNumber) {
    function POIdOnClick(Id, POPUniqueNumber, WhId) {

        globalId = POPUniqueNumber;
        WHouseID = WhId;

        resetItemDetails();

        $.ajax({
            type: "GET",
            url: "/WareHouse/WareHouseSalesOrder/GetDPOItemsByParentId",
            data: { ParentId: Id },
            contentType: "application/json",
            dataType: "json",
            success: function (data) {
                console.log(data);

                var orderInfoHtml = '<div><strong>Customer Name:</strong> ' + data[0].wareHuose["wareHouseName"] + '</div>';
                orderInfoHtml += '<div><strong>Address:</strong> ' + data[0].wareHuose["address"] + '</div>';
                orderInfoHtml += '<div><strong>Phone No.:</strong> ' + data[0].wareHuose["telephone"] + '</div>';
                orderInfoHtml += '<div><strong>Order Number:</strong> ' + POPUniqueNumber + '</div>';

                $('#orderInfo').html(orderInfoHtml);

                var table = '<table class="table"><thead><tr><th>Sl No.</th><th>Product Name</th><th>Selling Price</th><th>Quantity</th><th>Price</th><th>GST</th><th>HSN</th><th>Action</th></tr></thead><tbody>';
                var totalAmount = 0;
                

                for (var i = 0; i < data.length; i++) {
                    var dpoItem = data[i];

                    // Assuming dpoItem contains properties such as 'dpoItems', 'quantity', 'value', 'cgst', 'sgst', 'hsn', etc.

                    for (var j = 0; j < dpoItem.dpoItems.length; j++) {
                        var item = dpoItem.dpoItems[j].item; // Accessing the item within dpoItems array
                        var quantity1 = dpoItem.dpoItems[j].quantity;
                        //var value = dpoItem.dpoItems[j].value;
                        var distributorCost = item.distributorCost;

                        table += '<tr class="item-row" data-item-id="' + item.itemId + '">';
                        table += '<td>' + (i + 1) + '</td>';
                        table += '<td>' + item.itemName + '</td>';
                        table += '<td>₹' + item.distributorCost + '</td>';
                        table += '<td>' + quantity1 + '</td>';
                        table += '<td>' + (distributorCost * quantity1) + '</td>';
                        var gstSum = item.cgst + item.sgst;
                        table += '<td>' + gstSum + '</td>';
                        table += '<td>' + item.hsn + '</td>';

                        table += '<td class="action-buttons">';
                        table += '<button onclick="acceptAction(\'' + item.itemId + '\', \'' + item.itemName + '\', \'' + item.distributorCost + '\', \'' + item.shortName + '\', \'' + item.caseWeight + '\', \'' + quantity1 + '\', \'' + gstSum + '\', \'' + item.hsn + '\')">Accept</button>';
                        table += '<button onclick="rejectAction(' + item.itemId + ')">Reject</button>';
                        table += '</td>';

                        table += '</tr>';
                        totalAmount += parseFloat(distributorCost * quantity1);
                    }
                }

                table += '</tbody></table>';
                table += '<div>Total Amount: ₹' + totalAmount.toFixed(2) + '</div>';

                $('#itemsTable').html(table);


                originalItemsTableHtml2 = table;

                // Populate #itemsTable with the generated table HTML
                $('#itemsTable').html(originalItemsTableHtml2);

                var acceptButtonTableHtml = '<table>' + acceptButtonData + '</table>';

                // Display the table with only the "Accept" button data
                $('#acceptButtonTable').html(acceptButtonTableHtml);


            },
            error: function () {

            }
        });
    }

    function resetItemDetails() {
        itemDetails.length = 0; // Clear all elements in the array
    }


    var originalAcceptedItemHtml = '';
    var removedRowHtml = '';




    function acceptAction(itemId, itemName, distributorCost, shortName, caseWeight, quantity, gst, hsn) {
        // Check if data is already present in acceptedItemContainer
        if ($('#acceptedItemContainer').children().length === 0) {
            var acceptedItemHtml = '<div class="accepted-item">';
            acceptedItemHtml += '<strong>Product Details:</strong>';
            acceptedItemHtml += '<div>Item Name: ' + itemName + '</div>';
            acceptedItemHtml += '<div>Sales Cost: ' + distributorCost + '</div>';
            acceptedItemHtml += '<div>UOM: ' + shortName + '</div>';
            acceptedItemHtml += '<div>Case Weight: ' + caseWeight + '</div>';
            //acceptedItemHtml += '<div>MRP: ' + mrp + '</div>';
            //acceptedItemHtml += '<div>CGST: ' + cgst + '</div>';
            //acceptedItemHtml += '<div>SGST: ' + sgst + '</div>';
            acceptedItemHtml += '<div>Quantity: ' + quantity + '</div>';
            acceptedItemHtml += '<div>HSN Code: ' + gst + '</div>';
            acceptedItemHtml += '<div>GST: ' + hsn + '</div>';
            acceptedItemHtml += '<div class="action-buttons">';
            acceptedItemHtml += '<button onclick="acceptButtonClick(\'' + itemId + '\', \'' + itemName + '\', \'' + distributorCost + '\', \'' + shortName + '\', \'' + caseWeight + '\', \'' + quantity + '\')">Accept</button>';
            acceptedItemHtml += '<button onclick="editButtonClick(\'' + itemId + '\', \'' + itemName + '\', \'' + distributorCost + '\', \'' + shortName + '\', \'' + caseWeight + '\', \'' + quantity + '\')">Edit</button>';
            acceptedItemHtml += '<button onclick="backButtonClick(\'' + itemId + '\', \'' + itemName + '\', \'' + distributorCost + '\', \'' + shortName + '\', \'' + caseWeight + '\', \'' + quantity + '\')">Back</button>';
            acceptedItemHtml += '</div>';
            acceptedItemHtml += '</div>';

            // Remove the row from the table based on the itemName
            //var removedRow = $('#itemsTable').find('td:contains("' + itemId + '")').closest('tr').remove();
            var removedRow = $('#itemsTable').find('td:contains("' + itemName + '")').closest('tr').remove();




            // Update the total amount by subtracting the value of the removed row
            var removedValue = parseFloat(removedRow.find('td:eq(4)').text().replace('₹', '').trim());
            var totalAmount = parseFloat($('#itemsTable').find('div:contains("Total Amount:")').text().replace('Total Amount: ₹', '').trim());
            totalAmount -= removedValue;

            // Update the total amount in the table
            $('#itemsTable').find('div:contains("Total Amount:")').text('Total Amount: ₹' + totalAmount.toFixed(2));

            $('#acceptedItemContainer').append(acceptedItemHtml);
            originalAcceptedItemHtml = $('#acceptedItemContainer').html();
        }
    }




    function backButtonClick() {
        // Restore the original HTML content of #acceptedItemContainer
        //$('#acceptedItemContainer').html(originalAcceptedItemHtml2);


        $('#itemsTable').html(originalItemsTableHtml2);
        //$('#itemsTable').html(originalAcceptedItemHtml);
        $('#acceptedItemContainer').empty();

    }


    function isTableEmpty() {
        return $('#itemsTable tbody tr').length === 0;
    }


    function editButtonClick(itemId, itemName, distributorCost, shortName, caseWeight, quantity) {


        // Create an editable form for the accepted item
        var acceptedItemForm = '<form id="editForm">';
        acceptedItemForm += '<strong>Product Details:</strong>';
        acceptedItemForm += '<div>Item Id:<input type="text" id="editItemId" value="' + itemId + '"></div>';
        acceptedItemForm += '<div>Item Name:<input type="text" id="editItemName" value="' + itemName + '"></div>';
        acceptedItemForm += '<div>Distributor Cost:<input type="text" id="distributorCost" value="' + distributorCost + '"></div>';
        acceptedItemForm += '<div>UOM:<input type="text" id="editShortName" value="' + shortName + '"></div>';
        acceptedItemForm += '<div>Case Weight:<input type="text" id="editCaseWeight" value="' + caseWeight + '"></div>';
        //acceptedItemForm += '<div>MRP:<input type="text" id="editMRP" value="' + mrp + '"></div>';
        //acceptedItemForm += '<div>CGST:<input type="text" id="editCGST" value="' + cgst + '"></div>';
        //acceptedItemForm += '<div>SGST:<input type="text" id="editSGST" value="' + sgst + '"></div>';
        acceptedItemForm += '<div>Quantity:<input type="text" id="editQuantity" value="' + quantity + '"></div>';
        acceptedItemForm += '<div class="action-buttons">';
        //acceptedItemForm += '<button type="button" onclick="saveEdit()">Save</button>';
        acceptedItemForm += '<button type="button" onclick="saveEdit(\'' + itemId + '\', \'' + itemName + '\', \'' + distributorCost + '\', \'' + shortName + '\', \'' + caseWeight + '\', \'' + quantity + '\')">Save</button>';
        acceptedItemForm += '<button type="button" onclick="cancelEdit()">Cancel</button>';
        acceptedItemForm += '</div>';
        acceptedItemForm += '</form>';

        // Append the editable form to the acceptedItemContainer
        $('#acceptedItemContainer').html(acceptedItemForm);
    }

    $('button.editButton').on('click', function () {
        var itemName = 'Item Name'; // Replace with actual value
        var distributorCost = 'Distributor Cost'; // Replace with actual value
        var shortName = 'UOM'; // Replace with actual value
        var caseWeight = 'Case Weight'; // Replace with actual value
        var quantity = $(this).data('quantity'); // Assuming you're getting quantity from data attribute

        //editButtonClick(itemName, distributorCost, shortName, caseWeight, quantity);
    });


    



    //function saveEdit() {
    //    var editedData = {
    //        itemName: $('#ItemName').val(),
    //        //distributorCost: $('#DistributorCost').val(),
    //        distributorCost: parseFloat($('#DistributorCost').val()),
    //        shortName: $('#ShortName').val(),
    //        //caseWeight: $('#CaseWeight').val(),
    //        caseWeight: parseFloat($('#CaseWeight').val()),
    //        mrp: parseFloat($('#MRP').val()),
    //        cgst: parseFloat($('#CGST').val()),
    //        sgst: parseFloat($('#SGST').val()),
    //        quantity: parseFloat($('#quantity').val())
    //    };

    //    var editedItemHtml = '<div class="edited-item">';
    //    editedItemHtml += '<strong>Edited Product Details:</strong>';
    //    editedItemHtml += '<div>Item Name: ' + editedData.itemName + '</div>';
    //    editedItemHtml += '<div>Sales Cost: ' + editedData.salesCost + '</div>';
    //    editedItemHtml += '<div>UOM: ' + editedData.shortName + '</div>';
    //    editedItemHtml += '<div>Case Weight: ' + editedData.caseWeight + '</div>';
    //    editedItemHtml += '<div>MRP: ' + editedData.mrp + '</div>';
    //    editedItemHtml += '<div>CGST: ' + editedData.cgst + '</div>';
    //    editedItemHtml += '<div>SGST: ' + editedData.sgst + '</div>';
    //    editedItemHtml += '<div>Quantity: ' + editedData.quantity + '</div>';
    //    editedItemHtml += '</div>';

    //    $('#acceptedItemContainer').append(editedItemHtml);
    //    save = $('#acceptedItemContainer').html();
    //    $('#acceptedItemContainer').hide();
    //    console.log("Edited Data:", editedData);
    //}


    // Adjust the saveEdit() function to accept parameters
    function saveEdit() {
        var editedData = {
            itemId: $('#editItemId').val(),
            itemName: $('#editItemName').val(),
            distributorCost: parseFloat($('#distributorCost').val()),
            shortName: $('#editShortName').val(),
            caseWeight: parseFloat($('#editCaseWeight').val()),
            //mrp: parseFloat($('#editMRP').val()), // if uncommented
            //cgst: parseFloat($('#editCGST').val()), // if uncommented
            //sgst: parseFloat($('#editSGST').val()), // if uncommented
            quantity: parseFloat($('#editQuantity').val())
        };

        var editedItemHtml = '<div class="edited-item">';
        editedItemHtml += '<strong>Edited Product Details:</strong>';
        editedItemHtml += '<div>Item Id: ' + editedData.itemId + '</div>';
        editedItemHtml += '<div>Item Name: ' + editedData.itemName + '</div>';
        editedItemHtml += '<div>Sales Cost: ' + editedData.distributorCost + '</div>';
        editedItemHtml += '<div>UOM: ' + editedData.shortName + '</div>';
        editedItemHtml += '<div>Case Weight: ' + editedData.caseWeight + '</div>';
        //editedItemHtml += '<div>MRP: ' + editedData.mrp + '</div>';
        //editedItemHtml += '<div>CGST: ' + editedData.cgst + '</div>';
        //editedItemHtml += '<div>SGST: ' + editedData.sgst + '</div>';
        editedItemHtml += '<div>Quantity: ' + editedData.quantity + '</div>';
        editedItemHtml += '</div>';

        //$('#acceptedItemContainer').append(editedItemHtml);
        //save = $('#acceptedItemContainer').html();
        $('#acceptedItemContainer').hide();
        console.log("Edited Data:", editedData);


        var acceptedItemData = {
            itemId: editedData.itemId,
            amount: editedData.distributorCost,
            quantity: editedData.quantity,
            //wareHuoseId: WHouseID // Assuming WHouseID is already defined
        };

        itemDetails.push(acceptedItemData);

        $('#acceptedItemContainer').empty();
    }




    function cancelEdit() {
        //$('#acceptedItemContainer').html(save);
        $('#acceptedItemContainer').html(originalAcceptedItemHtml);
    }
    function rejectAction(itemId) {

        // Remove the row from the table based on the itemId
        var removedRow = $('#itemsTable').find('tr[data-item-id="' + itemId + '"]').remove();

        // Update the total amount by subtracting the value of the removed row
        var removedValue = parseFloat(removedRow.find('td:eq(4)').text().replace('₹', '').trim());
        var totalAmount = parseFloat($('#itemsTable').find('div:contains("Total Amount:")').text().replace('Total Amount: ₹', '').trim());
        totalAmount -= removedValue;

        $('#itemsTable').find('div:contains("Total Amount:")').text('Total Amount: ₹' + totalAmount.toFixed(2));

        if (isTableEmpty()) {
            console.log('Table is empty');

            $('#menuItem_' + globalId).remove();

        }
    }


    var itemDetails = [];
    var totalQuantity = 0;
    var totalValue = 0;
    var parentDetails = {};
    //var parentDetails = [];
    var parsedGlobalId = String(globalId);


    function acceptButtonClick(itemId, itemName, distributorCost, shortName, caseWeight, quantity) {
        // Convert data types if needed
        var parseditemId = parseFloat(itemId);
        var parsedDistributorCost = parseFloat(distributorCost);
        var parsedCaseWeight = parseFloat(caseWeight);
        //var parsedMRP = parseFloat(mrp);
        //var parsedCGST = parseFloat(cgst);
        //var parsedSGST = parseFloat(sgst);
        var parsedQuantity = parseFloat(quantity);

        // Create a JavaScript object with accepted item details
        var acceptedItemData = {
            itemId: parseditemId,
            amount: parsedDistributorCost,
            quantity: parsedQuantity,
            //wareHuoseId: WHouseID
        };


        totalQuantity += parsedQuantity;
        totalValue += distributorCost * parsedQuantity;

        // Push the converted data into the itemDetails array
        itemDetails.push(acceptedItemData);

        // Clear the content of the acceptedItemContainer
        $('#acceptedItemContainer').empty();
        // Hide the corresponding menu item
        //$('#menuItem_' + POPUniqueNumber).hide();

        //createParentDetails();

        parentDetails = {
            //"POPUniqueNumber": globalId.toString(),
            "DPOUniqueNo": globalId,
            "TotalQuantity": totalQuantity,
            "TotalAmount": totalValue,
            "WareHuoseId": WHouseID
        };
    }

    //var newTotalQuantity = parseFloat(totalQuantity);
    //var newTotalAmount = parseFloat(totalValue);




    //function createParentDetails() {
    //    var parentDetails = {
    //        "POPUniqueNumber": parsedGlobalId,
    //        "TotalQuantity": totalQuantity,
    //        "TotalAmount": totalValue
    //    };





    function printInvoice() {


        var model = {
            "Itemss": itemDetails,
            "Parent": parentDetails
        };

        $.ajax({
            type: "POST",
            url: "/WareHouse/WareHouseSalesOrder/CreateWareHouseSalesOrder",
            data: JSON.stringify(model),
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                console.log(result);

                //RemovePOPUniqueSetOrderShipped(globalId);

                // <-- Corrected closing parenthesis

                if (isTableEmpty()) {
                    console.log('Table is empty');


                    //console.log(typeof globalId);
                    //RemovePOPUniqueSetOrderShipped(globalId);

                    var GlobalIDs = parseInt(globalId);

                    RemovePOPUniqueSetOrderShipped(parseInt(GlobalIDs));
                    $('#menuItem_' + globalId).remove();



                    function RemovePOPUniqueSetOrderShipped(parsedGlobalId) {
                        console.log(typeof parsedGlobalId)
                        $.ajax({
                            type: "POST",
                            url: "/WareHouse/SO/SOShippedSetTrue",
                            //data: { globalId: parsedGlobalId }, // Use lowercase "globalId"
                            data: JSON.stringify(parsedGlobalId),
                            contentType: "application/json",
                            dataType: "json",
                            success: function (result) {
                                console.log(result);
                                console.log("Shipping Success");
                            },
                            error: function () {
                                console.error("Error in AJAX call");
                            }
                        });
                    }

                }
            },
            error: function () {


                if (isTableEmpty()) {
                    console.log('Table is empty');


                    //console.log(typeof globalId);
                    //RemovePOPUniqueSetOrderShipped(globalId);

                    var GlobalIDs = parseInt(globalId);

                    RemovePOPUniqueSetOrderShipped(parseInt(GlobalIDs));
                    $('#menuItem_' + globalId).remove();



                    function RemovePOPUniqueSetOrderShipped(parsedGlobalId) {
                        console.log(typeof parsedGlobalId)
                        $.ajax({
                            type: "POST",
                            url: "/WareHouse/SO/SOShippedSetTrue",
                            //data: { globalId: parsedGlobalId }, // Use lowercase "globalId"
                            data: JSON.stringify(parsedGlobalId),
                            contentType: "application/json",
                            dataType: "json",
                            success: function (result) {
                                console.log(result);
                                console.log("Shipping Success");
                            },
                            error: function () {
                                console.error("Error in AJAX call");
                            }
                        });
                    }

                }

            }
        });
    }






    //function acceptButtonClick() {

    //    save = $('#acceptedItemContainer').html();
    //    console.log("Data saved:", save);
    //    $('#acceptedItemContainer').empty();
    //}
    $(document).ready(function () {
        var selectedCategoryId = localStorage.getItem('selectedCategoryId');
        if (selectedCategoryId) {
            POId(selectedCategoryId);
        }
    });

</script>
