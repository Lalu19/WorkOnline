@using CloudVOffice.Core.Domain.Common;
@{
    Layout = "_SellerLayout";
    ViewData["Title"] = "Seller Farming Product";
}
@addTagHelper *, Syncfusion.EJ2

<style>
    .side-content ul.user-actions {
        display: block;
        margin: auto;
        padding: 65px 10px 20px 10px;
        text-align: center;
        background: #f5f6fa;
    }
</style>

<div class="app-main">

<header class="main-heading">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-8 col-lg-8 col-md-8 col-sm-8">
                <div class="page-icon">
                    <i class="icon-laptop_windows"></i>
                </div>
                <div class="page-title">
                    <h5>Ware House</h5>
                </div>
            </div>
            <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4">
                <div class="right-actions">
                    <span class="last-login"></span>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="main-content">
    <div class="row gutters">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-10">
                            Seller Farming Product View
                        </div>
                        <div class="col-md-2 ">
                            <a href="/SellerFarmingProduct/CreateSellerFarmingProduct" class="btn btn-primary btn-sm float-right"><i class="icon icon-add"></i>Add</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <ejs-grid id="GridOverview" dataSource="ViewBag.SellerFarmingProducts"
                              allowFiltering="true" allowSorting="true"
                              allowExcelExport="true" allowGrouping="true"
                              allowMultiSorting="true"
                              allowPdfExport="true"
                              height="340" rowHeight="38"
                              enableHover="false" enableHeaderFocus="true"
                              enableVirtualization="true" allowSelection="true"
                              toolbarClick="toolbarClick" toolbar="@(new List<string>() {"ExcelExport", "PdfExport", "CsvExport" ,"Search"})" allowPaging="true">

                        <e-grid-filtersettings type="Menu"></e-grid-filtersettings>

                        <e-grid-pagesettings pageCount="4" pageSizes="true"></e-grid-pagesettings>
                        <e-grid-columns>
                            <e-grid-column field="Category.CategoryName" headerText="CategoryName" textAlign="Left" width="150"></e-grid-column>
                            <e-grid-column field="SubCategory1.SubCategory1Name" headerText="SubCategory1Name" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="SubCategory2.SubCategory2Name" headerText="SubCategory2Name" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="ProductName" headerText="ProductName" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="MinQty" headerText="MinQty" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="GST.GSTValue" headerText="GSTValue" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="HSN" headerText="HSN" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="Price" headerText="Price" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="QtyPerKg" headerText="QtyPerKg" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="CompanyName" headerText="CompanyName" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="Brand.BrandName" headerText="BrandName" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="ProductWeight" headerText="ProductWeight" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="Unit.ShortName" headerText="ShortName" textAlign="Left" width="180"></e-grid-column>
                            <e-grid-column field="HarvestDate" headerText="HarvestDate" textAlign="Left" width="180"></e-grid-column>

                            <e-grid-column field="Thumbnail" template="#ImageTemplate" headerText="Thumbnail" textAlign="Left" width="120"> </e-grid-column>
                            <e-grid-column field="Images" headerText="Images" textAlign="Left" width="120" template="#Multipleimagetemplate"></e-grid-column>

                            <e-grid-column headerText="Action" template="#Actions" width="120"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>

                </div>
            </div>
        </div>
    </div>

</div>

</div>


<script id="Actions" type="text/x-template">
    <div class="link">
        <a href="/SellerFarmingProduct/CreateSellerFarmingProduct?SellerFarmingProductId=${SellerFarmingProductId}"><i class="icon-pencil3" style="font-size:22px"></i></a> &nbsp;&nbsp;&nbsp;
        <button onClick="Delete(${SellerFarmingProductId})" style="background: transparent;border: none;"><i class="icon-trash" style="font-size:22px"></i></button>

    </div>
</script>
<script type="text/javascript">
    function Delete(Id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this data!",
            icon: "warning",
            buttons: [
                'No, cancel it!',
                'Yes, I am sure!'
            ],
            confirmButtonColor: "#DD6B55",
            dangerMode: true,
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location.href = "/SellerFarmingProduct/DeleteSellerFarmingProduct?SellerFarmingProductId=" + Id;
            }
        })
    }
</script>

<script id="ImageTemplate" type="text/x-template">${imageTemplate(data)}</script>

<script id="Multipleimagetemplate" type="text/x-template">
    ${Multipleimagetemplate(data)}
</script>

<script>
    function toolbarClick(args) {
        var gridObj = document.getElementById("GridOverview").ej2_instances[0];
        if (args.item.id === 'GridOverview_pdfexport') {
            gridObj.pdfExport();
        }
        if (args.item.id === 'GridOverview_excelexport') {
            gridObj.excelExport();
        }
        if (args.item.id === 'GridOverview_csvexport') {
            gridObj.csvExport();
        }
    }


    function imageTemplate(i) {

        if (i.Thumbnail != null) {
            return ' <img src="/uploads/SellerFarmingThumbnail/' + i.Thumbnail + '" style="height:100px; width:100px ;padding: 5px 0px 5px 0;" />';
        } else {
            return 'No Image';
        }
    }
    function Multipleimagetemplate(item) {
        console.log('Item:', item);

        if (item.Images) {
            // Split the comma-separated string into an array of image filenames
            const imageFilenames = item.Images.split(',');

            if (imageFilenames.length > 0) {
                // Create HTML for each image with reduced size and padding
                const imagesHtml = imageFilenames.map(filename => {
                    // Assuming the images are in a specific folder, adjust the path accordingly
                    return `<img src="/uploads/SellerFarmingImages/${filename.trim()}" class="grid-image" style="height: 100px; width: 100px; padding: 5px 0 5px 0;" />`;
                }).join('');

                // Return the HTML for all images
                return '<div class="image-container">' + imagesHtml + '</div>';
            }
        }

        // Return 'No Images' if there are no images or if the Images field is null
        console.log('No Images');
        return 'No Images';
    }


</script>
@{

    if (TempData["msg"] != null)
    {
        <script type="text/javascript">
            const message = "@TempData["msg"]";
            if (message == "@((int)MessageEnum.Success)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: "PinCode Mapping",
                    text: "Successfully created.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.Updated)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: "PinCode Mapping",
                    text: "Successfully updated.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.Deleted)") {
                sweetAlert({
                    html: true,
                    icon: "success",
                    title: "PinCode Mapping",
                    text: "Successfully Deleted.",
                    type: "success"
                });
            }
            else if (message == "@((int)MessageEnum.UnExpectedError)") {
                sweetAlert({
                    html: true,
                    icon: "danger",
                    title: "PinCode Mapping",
                    text: "There is somthing going wrong.",
                    type: "danger"
                });
            }
            else if (message == "@((int)MessageEnum.Error)") {
                sweetAlert({
                    html: true,
                    icon: "error",
                    title: "PinCode Mapping",
                    text: "There is somthing going wrong.",
                    type: "error"
                });
            }
            else {
                sweetAlert({
                    html: true,
                    icon: "question",
                    title: "PinCode Mapping",
                    text: message,
                    type: "error"
                });
            }
        </script>
    }
}